/*
 * This file was auto-generated by speedy-antlr-tool v1.1.0
 *  https://github.com/amykyta3/speedy-antlr-tool
 */

#pragma once

#include "KotlinParserBaseVisitor.h"
#include "speedy_antlr.h"

class SA_KotlinTranslator : public KotlinParserBaseVisitor {
    speedy_antlr::Translator *translator;

    // Cached context classes
    PyObject *KotlinFileContext_cls = NULL;
    PyObject *ScriptContext_cls = NULL;
    PyObject *ShebangLineContext_cls = NULL;
    PyObject *FileAnnotationContext_cls = NULL;
    PyObject *PackageHeaderContext_cls = NULL;
    PyObject *ImportListContext_cls = NULL;
    PyObject *ImportHeaderContext_cls = NULL;
    PyObject *ImportAliasContext_cls = NULL;
    PyObject *TopLevelObjectContext_cls = NULL;
    PyObject *TypeAliasContext_cls = NULL;
    PyObject *DeclarationContext_cls = NULL;
    PyObject *ClassDeclarationContext_cls = NULL;
    PyObject *PrimaryConstructorContext_cls = NULL;
    PyObject *ClassBodyContext_cls = NULL;
    PyObject *ClassParametersContext_cls = NULL;
    PyObject *ClassParameterContext_cls = NULL;
    PyObject *DelegationSpecifiersContext_cls = NULL;
    PyObject *DelegationSpecifierContext_cls = NULL;
    PyObject *ConstructorInvocationContext_cls = NULL;
    PyObject *AnnotatedDelegationSpecifierContext_cls = NULL;
    PyObject *ExplicitDelegationContext_cls = NULL;
    PyObject *TypeParametersContext_cls = NULL;
    PyObject *TypeParameterContext_cls = NULL;
    PyObject *TypeConstraintsContext_cls = NULL;
    PyObject *TypeConstraintContext_cls = NULL;
    PyObject *ClassMemberDeclarationsContext_cls = NULL;
    PyObject *ClassMemberDeclarationContext_cls = NULL;
    PyObject *AnonymousInitializerContext_cls = NULL;
    PyObject *CompanionObjectContext_cls = NULL;
    PyObject *FunctionValueParametersContext_cls = NULL;
    PyObject *FunctionValueParameterContext_cls = NULL;
    PyObject *FunctionDeclarationContext_cls = NULL;
    PyObject *FunctionBodyContext_cls = NULL;
    PyObject *VariableDeclarationContext_cls = NULL;
    PyObject *MultiVariableDeclarationContext_cls = NULL;
    PyObject *PropertyDeclarationContext_cls = NULL;
    PyObject *PropertyDelegateContext_cls = NULL;
    PyObject *GetterContext_cls = NULL;
    PyObject *SetterContext_cls = NULL;
    PyObject *ParametersWithOptionalTypeContext_cls = NULL;
    PyObject *FunctionValueParameterWithOptionalTypeContext_cls = NULL;
    PyObject *ParameterWithOptionalTypeContext_cls = NULL;
    PyObject *ParameterContext_cls = NULL;
    PyObject *ObjectDeclarationContext_cls = NULL;
    PyObject *SecondaryConstructorContext_cls = NULL;
    PyObject *ConstructorDelegationCallContext_cls = NULL;
    PyObject *EnumClassBodyContext_cls = NULL;
    PyObject *EnumEntriesContext_cls = NULL;
    PyObject *EnumEntryContext_cls = NULL;
    PyObject *TypeContext_cls = NULL;
    PyObject *TypeReferenceContext_cls = NULL;
    PyObject *NullableTypeContext_cls = NULL;
    PyObject *QuestContext_cls = NULL;
    PyObject *UserTypeContext_cls = NULL;
    PyObject *SimpleUserTypeContext_cls = NULL;
    PyObject *TypeProjectionContext_cls = NULL;
    PyObject *TypeProjectionModifiersContext_cls = NULL;
    PyObject *TypeProjectionModifierContext_cls = NULL;
    PyObject *FunctionTypeContext_cls = NULL;
    PyObject *FunctionTypeParametersContext_cls = NULL;
    PyObject *ParenthesizedTypeContext_cls = NULL;
    PyObject *ReceiverTypeContext_cls = NULL;
    PyObject *ParenthesizedUserTypeContext_cls = NULL;
    PyObject *StatementsContext_cls = NULL;
    PyObject *StatementContext_cls = NULL;
    PyObject *LabelContext_cls = NULL;
    PyObject *ControlStructureBodyContext_cls = NULL;
    PyObject *BlockContext_cls = NULL;
    PyObject *LoopStatementContext_cls = NULL;
    PyObject *ForStatementContext_cls = NULL;
    PyObject *WhileStatementContext_cls = NULL;
    PyObject *DoWhileStatementContext_cls = NULL;
    PyObject *AssignmentContext_cls = NULL;
    PyObject *SemiContext_cls = NULL;
    PyObject *SemisContext_cls = NULL;
    PyObject *ExpressionContext_cls = NULL;
    PyObject *DisjunctionContext_cls = NULL;
    PyObject *ConjunctionContext_cls = NULL;
    PyObject *EqualityContext_cls = NULL;
    PyObject *ComparisonContext_cls = NULL;
    PyObject *GenericCallLikeComparisonContext_cls = NULL;
    PyObject *InfixOperationContext_cls = NULL;
    PyObject *ElvisExpressionContext_cls = NULL;
    PyObject *ElvisContext_cls = NULL;
    PyObject *InfixFunctionCallContext_cls = NULL;
    PyObject *RangeExpressionContext_cls = NULL;
    PyObject *AdditiveExpressionContext_cls = NULL;
    PyObject *MultiplicativeExpressionContext_cls = NULL;
    PyObject *AsExpressionContext_cls = NULL;
    PyObject *PrefixUnaryExpressionContext_cls = NULL;
    PyObject *UnaryPrefixContext_cls = NULL;
    PyObject *PostfixUnaryExpressionContext_cls = NULL;
    PyObject *PostfixUnarySuffixContext_cls = NULL;
    PyObject *DirectlyAssignableExpressionContext_cls = NULL;
    PyObject *ParenthesizedDirectlyAssignableExpressionContext_cls = NULL;
    PyObject *AssignableExpressionContext_cls = NULL;
    PyObject *ParenthesizedAssignableExpressionContext_cls = NULL;
    PyObject *AssignableSuffixContext_cls = NULL;
    PyObject *IndexingSuffixContext_cls = NULL;
    PyObject *NavigationSuffixContext_cls = NULL;
    PyObject *CallSuffixContext_cls = NULL;
    PyObject *AnnotatedLambdaContext_cls = NULL;
    PyObject *TypeArgumentsContext_cls = NULL;
    PyObject *ValueArgumentsContext_cls = NULL;
    PyObject *ValueArgumentContext_cls = NULL;
    PyObject *PrimaryExpressionContext_cls = NULL;
    PyObject *ParenthesizedExpressionContext_cls = NULL;
    PyObject *CollectionLiteralContext_cls = NULL;
    PyObject *LiteralConstantContext_cls = NULL;
    PyObject *StringLiteralContext_cls = NULL;
    PyObject *LineStringLiteralContext_cls = NULL;
    PyObject *MultiLineStringLiteralContext_cls = NULL;
    PyObject *LineStringContentContext_cls = NULL;
    PyObject *LineStringExpressionContext_cls = NULL;
    PyObject *MultiLineStringContentContext_cls = NULL;
    PyObject *MultiLineStringExpressionContext_cls = NULL;
    PyObject *LambdaLiteralContext_cls = NULL;
    PyObject *LambdaParametersContext_cls = NULL;
    PyObject *LambdaParameterContext_cls = NULL;
    PyObject *AnonymousFunctionContext_cls = NULL;
    PyObject *FunctionLiteralContext_cls = NULL;
    PyObject *ObjectLiteralContext_cls = NULL;
    PyObject *ThisExpressionContext_cls = NULL;
    PyObject *SuperExpressionContext_cls = NULL;
    PyObject *IfExpressionContext_cls = NULL;
    PyObject *WhenSubjectContext_cls = NULL;
    PyObject *WhenExpressionContext_cls = NULL;
    PyObject *WhenEntryContext_cls = NULL;
    PyObject *WhenConditionContext_cls = NULL;
    PyObject *RangeTestContext_cls = NULL;
    PyObject *TypeTestContext_cls = NULL;
    PyObject *TryExpressionContext_cls = NULL;
    PyObject *CatchBlockContext_cls = NULL;
    PyObject *FinallyBlockContext_cls = NULL;
    PyObject *JumpExpressionContext_cls = NULL;
    PyObject *CallableReferenceContext_cls = NULL;
    PyObject *AssignmentAndOperatorContext_cls = NULL;
    PyObject *EqualityOperatorContext_cls = NULL;
    PyObject *ComparisonOperatorContext_cls = NULL;
    PyObject *InOperatorContext_cls = NULL;
    PyObject *IsOperatorContext_cls = NULL;
    PyObject *AdditiveOperatorContext_cls = NULL;
    PyObject *MultiplicativeOperatorContext_cls = NULL;
    PyObject *AsOperatorContext_cls = NULL;
    PyObject *PrefixUnaryOperatorContext_cls = NULL;
    PyObject *PostfixUnaryOperatorContext_cls = NULL;
    PyObject *ExclContext_cls = NULL;
    PyObject *MemberAccessOperatorContext_cls = NULL;
    PyObject *SafeNavContext_cls = NULL;
    PyObject *ModifiersContext_cls = NULL;
    PyObject *ParameterModifiersContext_cls = NULL;
    PyObject *ModifierContext_cls = NULL;
    PyObject *TypeModifiersContext_cls = NULL;
    PyObject *TypeModifierContext_cls = NULL;
    PyObject *ClassModifierContext_cls = NULL;
    PyObject *MemberModifierContext_cls = NULL;
    PyObject *VisibilityModifierContext_cls = NULL;
    PyObject *VarianceModifierContext_cls = NULL;
    PyObject *TypeParameterModifiersContext_cls = NULL;
    PyObject *TypeParameterModifierContext_cls = NULL;
    PyObject *FunctionModifierContext_cls = NULL;
    PyObject *PropertyModifierContext_cls = NULL;
    PyObject *InheritanceModifierContext_cls = NULL;
    PyObject *ParameterModifierContext_cls = NULL;
    PyObject *ReificationModifierContext_cls = NULL;
    PyObject *PlatformModifierContext_cls = NULL;
    PyObject *AnnotationContext_cls = NULL;
    PyObject *SingleAnnotationContext_cls = NULL;
    PyObject *MultiAnnotationContext_cls = NULL;
    PyObject *AnnotationUseSiteTargetContext_cls = NULL;
    PyObject *UnescapedAnnotationContext_cls = NULL;
    PyObject *SimpleIdentifierContext_cls = NULL;
    PyObject *IdentifierContext_cls = NULL;

    public:
    SA_KotlinTranslator(speedy_antlr::Translator *translator);
    ~SA_KotlinTranslator();
    antlrcpp::Any visitKotlinFile(KotlinParser::KotlinFileContext *ctx);

    antlrcpp::Any visitScript(KotlinParser::ScriptContext *ctx);

    antlrcpp::Any visitShebangLine(KotlinParser::ShebangLineContext *ctx);

    antlrcpp::Any visitFileAnnotation(KotlinParser::FileAnnotationContext *ctx);

    antlrcpp::Any visitPackageHeader(KotlinParser::PackageHeaderContext *ctx);

    antlrcpp::Any visitImportList(KotlinParser::ImportListContext *ctx);

    antlrcpp::Any visitImportHeader(KotlinParser::ImportHeaderContext *ctx);

    antlrcpp::Any visitImportAlias(KotlinParser::ImportAliasContext *ctx);

    antlrcpp::Any visitTopLevelObject(KotlinParser::TopLevelObjectContext *ctx);

    antlrcpp::Any visitTypeAlias(KotlinParser::TypeAliasContext *ctx);

    antlrcpp::Any visitDeclaration(KotlinParser::DeclarationContext *ctx);

    antlrcpp::Any visitClassDeclaration(KotlinParser::ClassDeclarationContext *ctx);

    antlrcpp::Any visitPrimaryConstructor(KotlinParser::PrimaryConstructorContext *ctx);

    antlrcpp::Any visitClassBody(KotlinParser::ClassBodyContext *ctx);

    antlrcpp::Any visitClassParameters(KotlinParser::ClassParametersContext *ctx);

    antlrcpp::Any visitClassParameter(KotlinParser::ClassParameterContext *ctx);

    antlrcpp::Any visitDelegationSpecifiers(KotlinParser::DelegationSpecifiersContext *ctx);

    antlrcpp::Any visitDelegationSpecifier(KotlinParser::DelegationSpecifierContext *ctx);

    antlrcpp::Any visitConstructorInvocation(KotlinParser::ConstructorInvocationContext *ctx);

    antlrcpp::Any visitAnnotatedDelegationSpecifier(KotlinParser::AnnotatedDelegationSpecifierContext *ctx);

    antlrcpp::Any visitExplicitDelegation(KotlinParser::ExplicitDelegationContext *ctx);

    antlrcpp::Any visitTypeParameters(KotlinParser::TypeParametersContext *ctx);

    antlrcpp::Any visitTypeParameter(KotlinParser::TypeParameterContext *ctx);

    antlrcpp::Any visitTypeConstraints(KotlinParser::TypeConstraintsContext *ctx);

    antlrcpp::Any visitTypeConstraint(KotlinParser::TypeConstraintContext *ctx);

    antlrcpp::Any visitClassMemberDeclarations(KotlinParser::ClassMemberDeclarationsContext *ctx);

    antlrcpp::Any visitClassMemberDeclaration(KotlinParser::ClassMemberDeclarationContext *ctx);

    antlrcpp::Any visitAnonymousInitializer(KotlinParser::AnonymousInitializerContext *ctx);

    antlrcpp::Any visitCompanionObject(KotlinParser::CompanionObjectContext *ctx);

    antlrcpp::Any visitFunctionValueParameters(KotlinParser::FunctionValueParametersContext *ctx);

    antlrcpp::Any visitFunctionValueParameter(KotlinParser::FunctionValueParameterContext *ctx);

    antlrcpp::Any visitFunctionDeclaration(KotlinParser::FunctionDeclarationContext *ctx);

    antlrcpp::Any visitFunctionBody(KotlinParser::FunctionBodyContext *ctx);

    antlrcpp::Any visitVariableDeclaration(KotlinParser::VariableDeclarationContext *ctx);

    antlrcpp::Any visitMultiVariableDeclaration(KotlinParser::MultiVariableDeclarationContext *ctx);

    antlrcpp::Any visitPropertyDeclaration(KotlinParser::PropertyDeclarationContext *ctx);

    antlrcpp::Any visitPropertyDelegate(KotlinParser::PropertyDelegateContext *ctx);

    antlrcpp::Any visitGetter(KotlinParser::GetterContext *ctx);

    antlrcpp::Any visitSetter(KotlinParser::SetterContext *ctx);

    antlrcpp::Any visitParametersWithOptionalType(KotlinParser::ParametersWithOptionalTypeContext *ctx);

    antlrcpp::Any visitFunctionValueParameterWithOptionalType(KotlinParser::FunctionValueParameterWithOptionalTypeContext *ctx);

    antlrcpp::Any visitParameterWithOptionalType(KotlinParser::ParameterWithOptionalTypeContext *ctx);

    antlrcpp::Any visitParameter(KotlinParser::ParameterContext *ctx);

    antlrcpp::Any visitObjectDeclaration(KotlinParser::ObjectDeclarationContext *ctx);

    antlrcpp::Any visitSecondaryConstructor(KotlinParser::SecondaryConstructorContext *ctx);

    antlrcpp::Any visitConstructorDelegationCall(KotlinParser::ConstructorDelegationCallContext *ctx);

    antlrcpp::Any visitEnumClassBody(KotlinParser::EnumClassBodyContext *ctx);

    antlrcpp::Any visitEnumEntries(KotlinParser::EnumEntriesContext *ctx);

    antlrcpp::Any visitEnumEntry(KotlinParser::EnumEntryContext *ctx);

    antlrcpp::Any visitType(KotlinParser::TypeContext *ctx);

    antlrcpp::Any visitTypeReference(KotlinParser::TypeReferenceContext *ctx);

    antlrcpp::Any visitNullableType(KotlinParser::NullableTypeContext *ctx);

    antlrcpp::Any visitQuest(KotlinParser::QuestContext *ctx);

    antlrcpp::Any visitUserType(KotlinParser::UserTypeContext *ctx);

    antlrcpp::Any visitSimpleUserType(KotlinParser::SimpleUserTypeContext *ctx);

    antlrcpp::Any visitTypeProjection(KotlinParser::TypeProjectionContext *ctx);

    antlrcpp::Any visitTypeProjectionModifiers(KotlinParser::TypeProjectionModifiersContext *ctx);

    antlrcpp::Any visitTypeProjectionModifier(KotlinParser::TypeProjectionModifierContext *ctx);

    antlrcpp::Any visitFunctionType(KotlinParser::FunctionTypeContext *ctx);

    antlrcpp::Any visitFunctionTypeParameters(KotlinParser::FunctionTypeParametersContext *ctx);

    antlrcpp::Any visitParenthesizedType(KotlinParser::ParenthesizedTypeContext *ctx);

    antlrcpp::Any visitReceiverType(KotlinParser::ReceiverTypeContext *ctx);

    antlrcpp::Any visitParenthesizedUserType(KotlinParser::ParenthesizedUserTypeContext *ctx);

    antlrcpp::Any visitStatements(KotlinParser::StatementsContext *ctx);

    antlrcpp::Any visitStatement(KotlinParser::StatementContext *ctx);

    antlrcpp::Any visitLabel(KotlinParser::LabelContext *ctx);

    antlrcpp::Any visitControlStructureBody(KotlinParser::ControlStructureBodyContext *ctx);

    antlrcpp::Any visitBlock(KotlinParser::BlockContext *ctx);

    antlrcpp::Any visitLoopStatement(KotlinParser::LoopStatementContext *ctx);

    antlrcpp::Any visitForStatement(KotlinParser::ForStatementContext *ctx);

    antlrcpp::Any visitWhileStatement(KotlinParser::WhileStatementContext *ctx);

    antlrcpp::Any visitDoWhileStatement(KotlinParser::DoWhileStatementContext *ctx);

    antlrcpp::Any visitAssignment(KotlinParser::AssignmentContext *ctx);

    antlrcpp::Any visitSemi(KotlinParser::SemiContext *ctx);

    antlrcpp::Any visitSemis(KotlinParser::SemisContext *ctx);

    antlrcpp::Any visitExpression(KotlinParser::ExpressionContext *ctx);

    antlrcpp::Any visitDisjunction(KotlinParser::DisjunctionContext *ctx);

    antlrcpp::Any visitConjunction(KotlinParser::ConjunctionContext *ctx);

    antlrcpp::Any visitEquality(KotlinParser::EqualityContext *ctx);

    antlrcpp::Any visitComparison(KotlinParser::ComparisonContext *ctx);

    antlrcpp::Any visitGenericCallLikeComparison(KotlinParser::GenericCallLikeComparisonContext *ctx);

    antlrcpp::Any visitInfixOperation(KotlinParser::InfixOperationContext *ctx);

    antlrcpp::Any visitElvisExpression(KotlinParser::ElvisExpressionContext *ctx);

    antlrcpp::Any visitElvis(KotlinParser::ElvisContext *ctx);

    antlrcpp::Any visitInfixFunctionCall(KotlinParser::InfixFunctionCallContext *ctx);

    antlrcpp::Any visitRangeExpression(KotlinParser::RangeExpressionContext *ctx);

    antlrcpp::Any visitAdditiveExpression(KotlinParser::AdditiveExpressionContext *ctx);

    antlrcpp::Any visitMultiplicativeExpression(KotlinParser::MultiplicativeExpressionContext *ctx);

    antlrcpp::Any visitAsExpression(KotlinParser::AsExpressionContext *ctx);

    antlrcpp::Any visitPrefixUnaryExpression(KotlinParser::PrefixUnaryExpressionContext *ctx);

    antlrcpp::Any visitUnaryPrefix(KotlinParser::UnaryPrefixContext *ctx);

    antlrcpp::Any visitPostfixUnaryExpression(KotlinParser::PostfixUnaryExpressionContext *ctx);

    antlrcpp::Any visitPostfixUnarySuffix(KotlinParser::PostfixUnarySuffixContext *ctx);

    antlrcpp::Any visitDirectlyAssignableExpression(KotlinParser::DirectlyAssignableExpressionContext *ctx);

    antlrcpp::Any visitParenthesizedDirectlyAssignableExpression(KotlinParser::ParenthesizedDirectlyAssignableExpressionContext *ctx);

    antlrcpp::Any visitAssignableExpression(KotlinParser::AssignableExpressionContext *ctx);

    antlrcpp::Any visitParenthesizedAssignableExpression(KotlinParser::ParenthesizedAssignableExpressionContext *ctx);

    antlrcpp::Any visitAssignableSuffix(KotlinParser::AssignableSuffixContext *ctx);

    antlrcpp::Any visitIndexingSuffix(KotlinParser::IndexingSuffixContext *ctx);

    antlrcpp::Any visitNavigationSuffix(KotlinParser::NavigationSuffixContext *ctx);

    antlrcpp::Any visitCallSuffix(KotlinParser::CallSuffixContext *ctx);

    antlrcpp::Any visitAnnotatedLambda(KotlinParser::AnnotatedLambdaContext *ctx);

    antlrcpp::Any visitTypeArguments(KotlinParser::TypeArgumentsContext *ctx);

    antlrcpp::Any visitValueArguments(KotlinParser::ValueArgumentsContext *ctx);

    antlrcpp::Any visitValueArgument(KotlinParser::ValueArgumentContext *ctx);

    antlrcpp::Any visitPrimaryExpression(KotlinParser::PrimaryExpressionContext *ctx);

    antlrcpp::Any visitParenthesizedExpression(KotlinParser::ParenthesizedExpressionContext *ctx);

    antlrcpp::Any visitCollectionLiteral(KotlinParser::CollectionLiteralContext *ctx);

    antlrcpp::Any visitLiteralConstant(KotlinParser::LiteralConstantContext *ctx);

    antlrcpp::Any visitStringLiteral(KotlinParser::StringLiteralContext *ctx);

    antlrcpp::Any visitLineStringLiteral(KotlinParser::LineStringLiteralContext *ctx);

    antlrcpp::Any visitMultiLineStringLiteral(KotlinParser::MultiLineStringLiteralContext *ctx);

    antlrcpp::Any visitLineStringContent(KotlinParser::LineStringContentContext *ctx);

    antlrcpp::Any visitLineStringExpression(KotlinParser::LineStringExpressionContext *ctx);

    antlrcpp::Any visitMultiLineStringContent(KotlinParser::MultiLineStringContentContext *ctx);

    antlrcpp::Any visitMultiLineStringExpression(KotlinParser::MultiLineStringExpressionContext *ctx);

    antlrcpp::Any visitLambdaLiteral(KotlinParser::LambdaLiteralContext *ctx);

    antlrcpp::Any visitLambdaParameters(KotlinParser::LambdaParametersContext *ctx);

    antlrcpp::Any visitLambdaParameter(KotlinParser::LambdaParameterContext *ctx);

    antlrcpp::Any visitAnonymousFunction(KotlinParser::AnonymousFunctionContext *ctx);

    antlrcpp::Any visitFunctionLiteral(KotlinParser::FunctionLiteralContext *ctx);

    antlrcpp::Any visitObjectLiteral(KotlinParser::ObjectLiteralContext *ctx);

    antlrcpp::Any visitThisExpression(KotlinParser::ThisExpressionContext *ctx);

    antlrcpp::Any visitSuperExpression(KotlinParser::SuperExpressionContext *ctx);

    antlrcpp::Any visitIfExpression(KotlinParser::IfExpressionContext *ctx);

    antlrcpp::Any visitWhenSubject(KotlinParser::WhenSubjectContext *ctx);

    antlrcpp::Any visitWhenExpression(KotlinParser::WhenExpressionContext *ctx);

    antlrcpp::Any visitWhenEntry(KotlinParser::WhenEntryContext *ctx);

    antlrcpp::Any visitWhenCondition(KotlinParser::WhenConditionContext *ctx);

    antlrcpp::Any visitRangeTest(KotlinParser::RangeTestContext *ctx);

    antlrcpp::Any visitTypeTest(KotlinParser::TypeTestContext *ctx);

    antlrcpp::Any visitTryExpression(KotlinParser::TryExpressionContext *ctx);

    antlrcpp::Any visitCatchBlock(KotlinParser::CatchBlockContext *ctx);

    antlrcpp::Any visitFinallyBlock(KotlinParser::FinallyBlockContext *ctx);

    antlrcpp::Any visitJumpExpression(KotlinParser::JumpExpressionContext *ctx);

    antlrcpp::Any visitCallableReference(KotlinParser::CallableReferenceContext *ctx);

    antlrcpp::Any visitAssignmentAndOperator(KotlinParser::AssignmentAndOperatorContext *ctx);

    antlrcpp::Any visitEqualityOperator(KotlinParser::EqualityOperatorContext *ctx);

    antlrcpp::Any visitComparisonOperator(KotlinParser::ComparisonOperatorContext *ctx);

    antlrcpp::Any visitInOperator(KotlinParser::InOperatorContext *ctx);

    antlrcpp::Any visitIsOperator(KotlinParser::IsOperatorContext *ctx);

    antlrcpp::Any visitAdditiveOperator(KotlinParser::AdditiveOperatorContext *ctx);

    antlrcpp::Any visitMultiplicativeOperator(KotlinParser::MultiplicativeOperatorContext *ctx);

    antlrcpp::Any visitAsOperator(KotlinParser::AsOperatorContext *ctx);

    antlrcpp::Any visitPrefixUnaryOperator(KotlinParser::PrefixUnaryOperatorContext *ctx);

    antlrcpp::Any visitPostfixUnaryOperator(KotlinParser::PostfixUnaryOperatorContext *ctx);

    antlrcpp::Any visitExcl(KotlinParser::ExclContext *ctx);

    antlrcpp::Any visitMemberAccessOperator(KotlinParser::MemberAccessOperatorContext *ctx);

    antlrcpp::Any visitSafeNav(KotlinParser::SafeNavContext *ctx);

    antlrcpp::Any visitModifiers(KotlinParser::ModifiersContext *ctx);

    antlrcpp::Any visitParameterModifiers(KotlinParser::ParameterModifiersContext *ctx);

    antlrcpp::Any visitModifier(KotlinParser::ModifierContext *ctx);

    antlrcpp::Any visitTypeModifiers(KotlinParser::TypeModifiersContext *ctx);

    antlrcpp::Any visitTypeModifier(KotlinParser::TypeModifierContext *ctx);

    antlrcpp::Any visitClassModifier(KotlinParser::ClassModifierContext *ctx);

    antlrcpp::Any visitMemberModifier(KotlinParser::MemberModifierContext *ctx);

    antlrcpp::Any visitVisibilityModifier(KotlinParser::VisibilityModifierContext *ctx);

    antlrcpp::Any visitVarianceModifier(KotlinParser::VarianceModifierContext *ctx);

    antlrcpp::Any visitTypeParameterModifiers(KotlinParser::TypeParameterModifiersContext *ctx);

    antlrcpp::Any visitTypeParameterModifier(KotlinParser::TypeParameterModifierContext *ctx);

    antlrcpp::Any visitFunctionModifier(KotlinParser::FunctionModifierContext *ctx);

    antlrcpp::Any visitPropertyModifier(KotlinParser::PropertyModifierContext *ctx);

    antlrcpp::Any visitInheritanceModifier(KotlinParser::InheritanceModifierContext *ctx);

    antlrcpp::Any visitParameterModifier(KotlinParser::ParameterModifierContext *ctx);

    antlrcpp::Any visitReificationModifier(KotlinParser::ReificationModifierContext *ctx);

    antlrcpp::Any visitPlatformModifier(KotlinParser::PlatformModifierContext *ctx);

    antlrcpp::Any visitAnnotation(KotlinParser::AnnotationContext *ctx);

    antlrcpp::Any visitSingleAnnotation(KotlinParser::SingleAnnotationContext *ctx);

    antlrcpp::Any visitMultiAnnotation(KotlinParser::MultiAnnotationContext *ctx);

    antlrcpp::Any visitAnnotationUseSiteTarget(KotlinParser::AnnotationUseSiteTargetContext *ctx);

    antlrcpp::Any visitUnescapedAnnotation(KotlinParser::UnescapedAnnotationContext *ctx);

    antlrcpp::Any visitSimpleIdentifier(KotlinParser::SimpleIdentifierContext *ctx);

    antlrcpp::Any visitIdentifier(KotlinParser::IdentifierContext *ctx);

};